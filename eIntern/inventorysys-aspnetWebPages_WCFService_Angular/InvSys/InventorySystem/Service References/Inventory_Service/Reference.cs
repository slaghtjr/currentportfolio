//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventorySystem.Inventory_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/GroceryStore_Service.Models")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Inventory_Service.IInventoryService")]
    public interface IInventoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/CreateInventory", ReplyAction="http://tempuri.org/IInventoryService/CreateInventoryResponse")]
        void CreateInventory(string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/CreateInventory", ReplyAction="http://tempuri.org/IInventoryService/CreateInventoryResponse")]
        System.Threading.Tasks.Task CreateInventoryAsync(string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RetrieveInventory", ReplyAction="http://tempuri.org/IInventoryService/RetrieveInventoryResponse")]
        string[] RetrieveInventory(string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RetrieveInventory", ReplyAction="http://tempuri.org/IInventoryService/RetrieveInventoryResponse")]
        System.Threading.Tasks.Task<string[]> RetrieveInventoryAsync(string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateInventory", ReplyAction="http://tempuri.org/IInventoryService/UpdateInventoryResponse")]
        void UpdateInventory(string departmentName, string stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateInventory", ReplyAction="http://tempuri.org/IInventoryService/UpdateInventoryResponse")]
        System.Threading.Tasks.Task UpdateInventoryAsync(string departmentName, string stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteInventory", ReplyAction="http://tempuri.org/IInventoryService/DeleteInventoryResponse")]
        void DeleteInventory(string departmentName, string stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteInventory", ReplyAction="http://tempuri.org/IInventoryService/DeleteInventoryResponse")]
        System.Threading.Tasks.Task DeleteInventoryAsync(string departmentName, string stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RetrieveAllInventory", ReplyAction="http://tempuri.org/IInventoryService/RetrieveAllInventoryResponse")]
        string[] RetrieveAllInventory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RetrieveAllInventory", ReplyAction="http://tempuri.org/IInventoryService/RetrieveAllInventoryResponse")]
        System.Threading.Tasks.Task<string[]> RetrieveAllInventoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/CreateStock", ReplyAction="http://tempuri.org/IInventoryService/CreateStockResponse")]
        void CreateStock(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/CreateStock", ReplyAction="http://tempuri.org/IInventoryService/CreateStockResponse")]
        System.Threading.Tasks.Task CreateStockAsync(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RetrieveStock", ReplyAction="http://tempuri.org/IInventoryService/RetrieveStockResponse")]
        string RetrieveStock(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/RetrieveStock", ReplyAction="http://tempuri.org/IInventoryService/RetrieveStockResponse")]
        System.Threading.Tasks.Task<string> RetrieveStockAsync(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateStock", ReplyAction="http://tempuri.org/IInventoryService/UpdateStockResponse")]
        void UpdateStock(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateStock", ReplyAction="http://tempuri.org/IInventoryService/UpdateStockResponse")]
        System.Threading.Tasks.Task UpdateStockAsync(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteStock", ReplyAction="http://tempuri.org/IInventoryService/DeleteStockResponse")]
        void DeleteStock(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/DeleteStock", ReplyAction="http://tempuri.org/IInventoryService/DeleteStockResponse")]
        System.Threading.Tasks.Task DeleteStockAsync(string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetProductNames", ReplyAction="http://tempuri.org/IInventoryService/GetProductNamesResponse")]
        string[] GetProductNames(string prefixName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetProductNames", ReplyAction="http://tempuri.org/IInventoryService/GetProductNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetProductNamesAsync(string prefixName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetProductsDD", ReplyAction="http://tempuri.org/IInventoryService/GetProductsDDResponse")]
        string[] GetProductsDD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetProductsDD", ReplyAction="http://tempuri.org/IInventoryService/GetProductsDDResponse")]
        System.Threading.Tasks.Task<string[]> GetProductsDDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetProducts", ReplyAction="http://tempuri.org/IInventoryService/GetProductsResponse")]
        InventorySystem.Inventory_Service.Product[] GetProducts(string product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetProducts", ReplyAction="http://tempuri.org/IInventoryService/GetProductsResponse")]
        System.Threading.Tasks.Task<InventorySystem.Inventory_Service.Product[]> GetProductsAsync(string product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetDepartmentNames", ReplyAction="http://tempuri.org/IInventoryService/GetDepartmentNamesResponse")]
        string[] GetDepartmentNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetDepartmentNames", ReplyAction="http://tempuri.org/IInventoryService/GetDepartmentNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetDepartmentNamesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceChannel : InventorySystem.Inventory_Service.IInventoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.ClientBase<InventorySystem.Inventory_Service.IInventoryService>, InventorySystem.Inventory_Service.IInventoryService {
        
        public InventoryServiceClient() {
        }
        
        public InventoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateInventory(string departmentName) {
            base.Channel.CreateInventory(departmentName);
        }
        
        public System.Threading.Tasks.Task CreateInventoryAsync(string departmentName) {
            return base.Channel.CreateInventoryAsync(departmentName);
        }
        
        public string[] RetrieveInventory(string departmentName) {
            return base.Channel.RetrieveInventory(departmentName);
        }
        
        public System.Threading.Tasks.Task<string[]> RetrieveInventoryAsync(string departmentName) {
            return base.Channel.RetrieveInventoryAsync(departmentName);
        }
        
        public void UpdateInventory(string departmentName, string stock) {
            base.Channel.UpdateInventory(departmentName, stock);
        }
        
        public System.Threading.Tasks.Task UpdateInventoryAsync(string departmentName, string stock) {
            return base.Channel.UpdateInventoryAsync(departmentName, stock);
        }
        
        public void DeleteInventory(string departmentName, string stock) {
            base.Channel.DeleteInventory(departmentName, stock);
        }
        
        public System.Threading.Tasks.Task DeleteInventoryAsync(string departmentName, string stock) {
            return base.Channel.DeleteInventoryAsync(departmentName, stock);
        }
        
        public string[] RetrieveAllInventory() {
            return base.Channel.RetrieveAllInventory();
        }
        
        public System.Threading.Tasks.Task<string[]> RetrieveAllInventoryAsync() {
            return base.Channel.RetrieveAllInventoryAsync();
        }
        
        public void CreateStock(string productName) {
            base.Channel.CreateStock(productName);
        }
        
        public System.Threading.Tasks.Task CreateStockAsync(string productName) {
            return base.Channel.CreateStockAsync(productName);
        }
        
        public string RetrieveStock(string productName) {
            return base.Channel.RetrieveStock(productName);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveStockAsync(string productName) {
            return base.Channel.RetrieveStockAsync(productName);
        }
        
        public void UpdateStock(string productName) {
            base.Channel.UpdateStock(productName);
        }
        
        public System.Threading.Tasks.Task UpdateStockAsync(string productName) {
            return base.Channel.UpdateStockAsync(productName);
        }
        
        public void DeleteStock(string productName) {
            base.Channel.DeleteStock(productName);
        }
        
        public System.Threading.Tasks.Task DeleteStockAsync(string productName) {
            return base.Channel.DeleteStockAsync(productName);
        }
        
        public string[] GetProductNames(string prefixName) {
            return base.Channel.GetProductNames(prefixName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetProductNamesAsync(string prefixName) {
            return base.Channel.GetProductNamesAsync(prefixName);
        }
        
        public string[] GetProductsDD() {
            return base.Channel.GetProductsDD();
        }
        
        public System.Threading.Tasks.Task<string[]> GetProductsDDAsync() {
            return base.Channel.GetProductsDDAsync();
        }
        
        public InventorySystem.Inventory_Service.Product[] GetProducts(string product) {
            return base.Channel.GetProducts(product);
        }
        
        public System.Threading.Tasks.Task<InventorySystem.Inventory_Service.Product[]> GetProductsAsync(string product) {
            return base.Channel.GetProductsAsync(product);
        }
        
        public string[] GetDepartmentNames() {
            return base.Channel.GetDepartmentNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDepartmentNamesAsync() {
            return base.Channel.GetDepartmentNamesAsync();
        }
    }
}
